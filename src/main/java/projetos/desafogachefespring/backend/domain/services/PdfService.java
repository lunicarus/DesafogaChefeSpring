package projetos.desafogachefespring.backend.domain.services;

import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import org.springframework.stereotype.Service;
import projetos.desafogachefespring.backend.domain.entities.FinancialReport;

import java.io.ByteArrayOutputStream;

@Service
public class PdfService {

    public byte[] generateFinancialReportPdf(FinancialReport report) {
        try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {
            PdfWriter writer = new PdfWriter(byteArrayOutputStream);
            com.itextpdf.kernel.pdf.PdfDocument pdfDoc = new com.itextpdf.kernel.pdf.PdfDocument(writer);
            Document document = new Document(pdfDoc);

            // Title
            document.add(new Paragraph("Financial Report")
                    .setFontSize(18).setBold().setMarginBottom(20));

            // Add report metadata
            document.add(new Paragraph("Report ID: " + report.getId()));
            document.add(new Paragraph("Loan Start Time: " + report.getStartDate()));
            document.add(new Paragraph("Loan End Time: " + report.getEndDate()));
            document.add(new Paragraph("Collaborator Name: " + report.getColaborator().getColaboratorName()));
            document.add(new Paragraph("Loaning Company: " + report.getLoaningCompany().getName()));
            document.add(new Paragraph("Loaner Company: " + report.getLoanerCompany().getName()));

            document.add(new Paragraph("\n"));

            // Summary Table
            Table table = new Table(2);
            table.addCell("Field");
            table.addCell("Value");

            table.addCell("Hours Worked");
            table.addCell(String.valueOf(calculateHoursWorked(report)));

            table.addCell("Base Pay");
            table.addCell(String.format("%.2f", report.getBasePay()));

            table.addCell("Extra Pay");
            table.addCell(String.format("%.2f", report.getExtraPay()));

            table.addCell("Transportation Cost");
            table.addCell(String.format("%.2f", report.getTransportationCost()));

            table.addCell("Total Cost");
            table.addCell(String.format("%.2f", report.getTotalCost()));

            document.add(table);

            // Footer
            document.add(new Paragraph("\nGenerated by the Colaborator Loan Management System")
                    .setFontSize(10).setItalic().setMarginTop(20));

            document.close();
            return byteArrayOutputStream.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException("Error while generating PDF", e);
        }
    }

    private long calculateHoursWorked(FinancialReport report) {
        return java.time.Duration.between(report.getStartDate(), report.getEndDate()).toHours();
    }
}
